console.log("📦 ChatGPT Prompt Counter loaded");let o=0,s=null,m=null,n="",i="";chrome.storage.local.get(["today_chatgpt_prompts"],t=>{o=parseInt(t.today_chatgpt_prompts||"0"),console.log(`🔄 Loaded existing ChatGPT prompts count: ${o}`),h()});function h(){l(),setInterval(l,2e3),window.addEventListener("popstate",()=>{console.log("🔄 Navigation detected, reinitializing..."),setTimeout(()=>{s=null,c()},500)}),window.addEventListener("hashchange",()=>{console.log("🔄 Hash change detected, reinitializing..."),setTimeout(()=>{s=null,c()},500)}),console.log("🚀 ChatGPT Prompt Counter system initialized")}function c(){const t=document.querySelector("div.ProseMirror#prompt-textarea");if(!t||t===s)return!1;console.log("🔄 Initializing tracking for new input field"),s=t,n="",i="";const r=()=>{i=t.textContent||t.innerText||""};t.addEventListener("input",r);const u=d=>{if(document.activeElement===t&&d.key==="Enter"&&!d.shiftKey){const a=i.trim();console.log("⚡ Enter pressed, captured:",JSON.stringify(a)),a.length>0&&(n=a,console.log("💾 Stored for validation:",n))}};return document.addEventListener("keydown",u),y(),f(),console.log("✅ Tracking initialized for current chat"),!0}function y(){m&&m.disconnect(),m=new MutationObserver(r=>{r.forEach(u=>{u.type==="childList"&&Array.from(u.addedNodes).some(e=>{if(e.nodeType===1)try{return[e.querySelector&&e.querySelector('[data-message-author-role="user"]'),e.matches&&e.matches('[data-message-author-role="user"]'),e.querySelector&&e.querySelector('[data-testid="user-message"]'),e.matches&&e.matches('[data-testid="user-message"]'),e.querySelector&&e.querySelector(".text-token-text-primary"),e.innerHTML&&e.innerHTML.includes('data-message-author-role="user"'),e.className&&typeof e.className=="string"&&e.className.includes("user")].some(p=>p)}catch{return!1}return!1})&&n.length>0&&(o++,chrome.storage.local.set({today_chatgpt_prompts:o},()=>{chrome.runtime.lastError?console.error("❌ Storage error:",chrome.runtime.lastError):console.log(`📊 Saved ChatGPT prompts count: ${o}`)}),console.log(`🟢 ChatGPT Prompt #${o} sent: "${n.substring(0,50)}${n.length>50?"...":""}"`),console.log(`📊 Total ChatGPT prompts today: ${o}`),n="",i="",console.log("🧹 Cleared stored content"))})});const t=document.querySelector('[data-testid="conversation-turn-list"]')||document.querySelector("main")||document.body;t&&m.observe(t,{childList:!0,subtree:!0})}function f(){const t=document.querySelector('[data-testid="send-button"]')||document.querySelector('button[aria-label*="Send"]')||document.querySelector('form button[type="submit"]');t&&!t.hasAttribute("data-tracked")&&(t.setAttribute("data-tracked","true"),t.addEventListener("click",()=>{const r=i.trim();r.length>0&&(n=r)}))}function l(){c();const t=window.location.href;t!==l.lastUrl&&(console.log("🔄 URL changed, reinitializing..."),s=null,c(),l.lastUrl=t);const r=document.querySelector("div.ProseMirror#prompt-textarea");r&&r!==s&&(console.log("🔄 New input field detected, reinitializing..."),c())}l.lastUrl=window.location.href;window.getPromptCount=()=>o;window.resetPromptCount=()=>(o=0,chrome.storage.local.set({today_chatgpt_prompts:0},()=>{chrome.runtime.lastError?console.error("❌ Storage error during reset:",chrome.runtime.lastError):console.log("🔄 ChatGPT prompts counter reset to 0 and saved to storage")}),o);window.checkStorage=()=>{chrome.storage.local.get(["today_chatgpt_prompts"],t=>{console.log("Current today_chatgpt_prompts storage value:",t.today_chatgpt_prompts),console.log("Current promptCount variable:",o)})};
