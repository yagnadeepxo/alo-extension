console.log("📦 Claude Prompt Counter loaded");let s=0,r=null,u=null,n="",c="",i=null;chrome.storage.local.get(["today_claude_prompts"],e=>{s=parseInt(e.today_claude_prompts||"0"),console.log(`🔄 Loaded existing Claude prompts count: ${s}`),v()});function v(){g(),setInterval(g,1e3),window.addEventListener("popstate",()=>{console.log("🔄 Navigation detected, reinitializing..."),setTimeout(()=>{r=null,d()},500)}),window.addEventListener("hashchange",()=>{console.log("🔄 Hash change detected, reinitializing..."),setTimeout(()=>{r=null,d()},500)}),console.log("🚀 Claude Prompt Counter system initialized")}function d(){const e=document.querySelector('div.ProseMirror[contenteditable="true"][role="textbox"]');if(!e)return!1;if(e===r)return f(),!1;console.log("🔄 Initializing tracking for new Claude input field"),r=e,n="",c="",r._claudeInputListener&&r.removeEventListener("input",r._claudeInputListener),r._claudeKeyListener&&document.removeEventListener("keydown",r._claudeKeyListener);const t=()=>{c=(e.textContent||e.innerText||"").trim(),console.log("📝 Content updated:",c.substring(0,30)+(c.length>30?"...":""))};r._claudeInputListener=t,e.addEventListener("input",t);const o=l=>{const a=document.activeElement;if((a===e||e.contains(a))&&l.key==="Enter"&&!l.shiftKey){const m=c.trim();console.log("⚡ Enter pressed in Claude, captured:",JSON.stringify(m)),m.length>0&&(n=m,console.log("💾 Stored for validation:",n),setTimeout(()=>{n.length>0&&(console.log("🔍 Checking for new messages after Enter..."),p())},1e3))}};return r._claudeKeyListener=o,document.addEventListener("keydown",o),w(),f(),console.log("✅ Tracking initialized for current Claude chat"),!0}function w(){u&&u.disconnect(),u=new MutationObserver(o=>{let l=!1;o.forEach(a=>{a.type==="childList"&&a.addedNodes.length>0&&Array.from(a.addedNodes).some(b=>b.nodeType===1?C(b):!1)&&(l=!0)}),l&&n.length>0&&(console.log("🎯 Mutation observer detected new user message"),h())});const t=[document.querySelector('[data-testid="conversation"]'),document.querySelector("main"),document.querySelector('[role="main"]'),document.querySelector("body")].filter(Boolean)[0];t&&(u.observe(t,{childList:!0,subtree:!0}),console.log("👀 Mutation observer watching:",t.tagName))}function C(e){try{return[e.getAttribute&&e.getAttribute("data-is-user-message")==="true",e.getAttribute&&e.getAttribute("data-testid")==="user-message",e.className&&typeof e.className=="string"&&e.className.includes("user-message"),e.querySelector&&e.querySelector('[data-is-user-message="true"]'),e.querySelector&&e.querySelector('[data-testid="user-message"]'),e.querySelector&&e.querySelector(".font-user-message"),e.querySelector&&e.querySelector(".user-message"),e.innerHTML&&e.innerHTML.includes('data-is-user-message="true"'),e.matches&&e.matches('[data-is-user-message="true"]'),e.matches&&e.matches('[data-testid="user-message"]'),n.length>10&&e.textContent&&e.textContent.includes(n.substring(0,20))].some(o=>o)}catch(t){return console.warn("Error checking node for user message:",t),!1}}function f(){i&&i.disconnect(),i=new MutationObserver(()=>{y()}),y();const e=document.querySelector("fieldset")||document.querySelector("form")||document.body;e&&i.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["disabled","aria-label"]})}function y(){const e=document.querySelector('button[aria-label*="Send message"]')||document.querySelector('button[type="submit"]')||document.querySelector('button[aria-label*="Send"]');if(e&&!e.hasAttribute("data-claude-tracked")){e.setAttribute("data-claude-tracked","true");const t=()=>{const o=c.trim();console.log("🖱️ Send button clicked, content:",o.substring(0,50)),o.length>0&&(n=o,setTimeout(()=>{n.length>0&&(console.log("🔍 Checking for new messages after send button click..."),p())},1e3))};e.addEventListener("click",t),console.log("✅ Send button listener attached")}}function p(){console.log("🔍 Manual check for new messages...");const e=document.querySelectorAll("*");let t=!1;for(let o of e)if(o.textContent&&n.length>10){const l=o.textContent.trim(),a=n.substring(0,Math.min(30,n.length));if(l.includes(a)&&C(o.parentElement||o)){console.log("🎯 Manual check found user message"),h(),t=!0;break}}return t||(console.log("❌ Manual check didn't find new message, will retry..."),setTimeout(()=>{n.length>0&&(console.log("🔄 Retry manual check..."),p()||(console.log("⚠️ Could not detect message, clearing stored content"),n="",c=""))},2e3)),t}function h(){s++,chrome.storage.local.set({today_claude_prompts:s},()=>{chrome.runtime.lastError?console.error("❌ Storage error:",chrome.runtime.lastError):console.log(`📊 Saved Claude prompts count: ${s}`)}),console.log(`🟢 Claude Prompt #${s} sent: "${n.substring(0,50)}${n.length>50?"...":""}"`),console.log(`📊 Total Claude prompts today: ${s}`),n="",c="",console.log("🧹 Cleared stored content")}function g(){d();const e=window.location.href;e!==g.lastUrl&&(console.log("🔄 URL changed, reinitializing..."),r=null,d(),g.lastUrl=e);const t=document.querySelector('div.ProseMirror[contenteditable="true"][role="textbox"]');t&&t!==r&&(console.log("🔄 New Claude input field detected, reinitializing..."),d()),t&&!document.querySelector("button[data-claude-tracked]")&&(console.log("🔄 Send button not tracked, reattaching..."),f())}g.lastUrl=window.location.href;window.getClaudePromptCount=()=>s;window.resetClaudePromptCount=()=>(s=0,chrome.storage.local.set({today_claude_prompts:0},()=>{chrome.runtime.lastError?console.error("❌ Storage error during reset:",chrome.runtime.lastError):console.log("🔄 Claude prompts counter reset to 0 and saved to storage")}),s);window.checkClaudeStorage=()=>{chrome.storage.local.get(["today_claude_prompts"],e=>{console.log("Current today_claude_prompts storage value:",e.today_claude_prompts),console.log("Current promptCount variable:",s)})};window.debugClaudeCounter=()=>{console.log("=== Claude Prompt Counter Debug ==="),console.log("Current input element:",r),console.log("Current content:",c),console.log("Last prompt content:",n),console.log("Prompt count:",s),console.log("Observer active:",u!==null),console.log("Send button observer active:",i!==null);const e=document.querySelector('div.ProseMirror[contenteditable="true"][role="textbox"]');console.log("Found input field:",e);const t=document.querySelector('button[aria-label*="Send message"]');console.log("Found send button:",t),console.log("Send button tracked:",t?.hasAttribute("data-claude-tracked"));const o=document.querySelectorAll('[data-is-user-message], [data-testid="user-message"], .user-message');console.log("Found potential user message elements:",o.length),o.forEach((l,a)=>console.log(`User message ${a}:`,l))};window.forceClaudePromptCount=(e="test")=>{n=e,console.log("🧪 Forcing prompt count with content:",e),h()};
